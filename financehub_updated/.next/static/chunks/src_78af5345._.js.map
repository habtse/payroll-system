{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/app/dashboard/reports/page.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Button } from \"@/components/ui/button\"\nimport { employees, salaries, leaves, bonuses, payrolls, attendances } from \"@/lib/dummy-data\"\nimport { formatCurrency, formatDate } from \"@/lib/utils\"\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  LineChart,\n  Line\n} from 'recharts'\n\nexport default function ReportsPage() {\n  // Department-wise salary distribution data\n  const departmentSalaryData = React.useMemo(() => {\n    const departments: Record<string, { count: number, totalSalary: number }> = {};\n    \n    employees.forEach(employee => {\n      const employeeSalary = salaries.find(s => s.employeeId === employee.id);\n      if (employeeSalary) {\n        if (!departments[employee.department]) {\n          departments[employee.department] = { count: 0, totalSalary: 0 };\n        }\n        departments[employee.department].count += 1;\n        departments[employee.department].totalSalary += employeeSalary.netSalary;\n      }\n    });\n    \n    return Object.entries(departments).map(([department, data]) => ({\n      department,\n      averageSalary: data.totalSalary / data.count,\n      totalSalary: data.totalSalary,\n      employeeCount: data.count\n    }));\n  }, []);\n\n  // Leave utilization data\n  const leaveUtilizationData = React.useMemo(() => {\n    const leaveTypes: Record<string, number> = {\n      annual: 0,\n      sick: 0,\n      maternity: 0,\n      paternity: 0,\n      unpaid: 0,\n      other: 0\n    };\n    \n    leaves.forEach(leave => {\n      leaveTypes[leave.leaveType] += leave.duration;\n    });\n    \n    return Object.entries(leaveTypes).map(([type, days]) => ({\n      type: type.charAt(0).toUpperCase() + type.slice(1),\n      days\n    }));\n  }, []);\n\n  // Bonus distribution data\n  const bonusDistributionData = React.useMemo(() => {\n    const bonusTypes: Record<string, number> = {\n      performance: 0,\n      festival: 0,\n      annual: 0,\n      project: 0,\n      other: 0\n    };\n    \n    bonuses.forEach(bonus => {\n      bonusTypes[bonus.bonusType] += bonus.amount;\n    });\n    \n    return Object.entries(bonusTypes).map(([type, amount]) => ({\n      type: type.charAt(0).toUpperCase() + type.slice(1),\n      amount\n    }));\n  }, []);\n\n  // Monthly payroll trend data\n  const monthlyPayrollData = React.useMemo(() => {\n    const months = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n    ];\n    \n    // Generate dummy data for the past 12 months\n    return months.map((month, index) => {\n      // Use actual data for April (index 3) from our dummy data\n      if (index === 3) {\n        const totalNetSalary = payrolls.reduce((sum, payroll) => sum + payroll.netSalary, 0);\n        const totalGrossSalary = payrolls.reduce((sum, payroll) => sum + payroll.grossEarnings, 0);\n        return {\n          month,\n          netSalary: totalNetSalary,\n          grossSalary: totalGrossSalary\n        };\n      }\n      \n      // Generate random data for other months\n      const baseValue = 400000 + Math.random() * 100000;\n      return {\n        month,\n        netSalary: baseValue * 0.75,\n        grossSalary: baseValue\n      };\n    });\n  }, []);\n\n  // Attendance status distribution data\n  const attendanceStatusData = React.useMemo(() => {\n    const statusCounts: Record<string, number> = {\n      present: 0,\n      absent: 0,\n      late: 0,\n      'half-day': 0,\n      'work-from-home': 0\n    };\n    \n    attendances.forEach(attendance => {\n      statusCounts[attendance.status]++;\n    });\n    \n    return Object.entries(statusCounts).map(([status, count]) => ({\n      status: status.charAt(0).toUpperCase() + status.replace('-', ' ').slice(1),\n      count\n    }));\n  }, []);\n\n  // Department-wise attendance data\n  const departmentAttendanceData = React.useMemo(() => {\n    const departments: Record<string, { \n      total: number, \n      present: number, \n      absent: number, \n      late: number, \n      wfh: number \n    }> = {};\n    \n    employees.forEach(employee => {\n      if (!departments[employee.department]) {\n        departments[employee.department] = { \n          total: 0, \n          present: 0, \n          absent: 0, \n          late: 0, \n          wfh: 0 \n        };\n      }\n      \n      departments[employee.department].total += 1;\n      \n      // Get the most recent attendance record for this employee\n      const latestAttendance = [...attendances]\n        .filter(a => a.employeeId === employee.id)\n        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())[0];\n      \n      if (latestAttendance) {\n        if (latestAttendance.status === 'present') {\n          departments[employee.department].present += 1;\n        } else if (latestAttendance.status === 'absent') {\n          departments[employee.department].absent += 1;\n        } else if (latestAttendance.status === 'late') {\n          departments[employee.department].late += 1;\n        } else if (latestAttendance.status === 'work-from-home') {\n          departments[employee.department].wfh += 1;\n        }\n      }\n    });\n    \n    return Object.entries(departments).map(([department, data]) => ({\n      department,\n      total: data.total,\n      present: data.present,\n      absent: data.absent,\n      late: data.late,\n      wfh: data.wfh,\n      attendanceRate: Math.round(((data.present + data.late + data.wfh) / data.total) * 100)\n    }));\n  }, []);\n\n  // COLORS for charts\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\">Reports & Analytics</h1>\n        <div>\n          <Button className=\"mr-2\">Export to PDF</Button>\n          <Button variant=\"outline\">Export to Excel</Button>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"payroll\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"payroll\">Payroll Summary</TabsTrigger>\n          <TabsTrigger value=\"department\">Department Analysis</TabsTrigger>\n          <TabsTrigger value=\"leave\">Leave Utilization</TabsTrigger>\n          <TabsTrigger value=\"bonus\">Bonus Distribution</TabsTrigger>\n          <TabsTrigger value=\"attendance\">Attendance Analytics</TabsTrigger>\n        </TabsList>\n        \n        {/* Payroll Summary Tab */}\n        <TabsContent value=\"payroll\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Net Salary (Current Month)</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatCurrency(payrolls.reduce((sum, payroll) => sum + payroll.netSalary, 0))}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +2.5% from last month\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Gross Earnings</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatCurrency(payrolls.reduce((sum, payroll) => sum + payroll.grossEarnings, 0))}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +3.2% from last month\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Employees Paid</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {payrolls.length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +1 from last month\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle>Monthly Payroll Trend</CardTitle>\n              <CardDescription>Net vs Gross Salary over the past 12 months</CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[400px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart\n                    data={monthlyPayrollData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip formatter={(value) => formatCurrency(value as number)} />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"grossSalary\" stroke=\"#8884d8\" name=\"Gross Salary\" />\n                    <Line type=\"monotone\" dataKey=\"netSalary\" stroke=\"#82ca9d\" name=\"Net Salary\" />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Payrolls</CardTitle>\n                <CardDescription>Latest processed payrolls</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-3 text-sm font-medium text-muted-foreground\">\n                    <div>Employee</div>\n                    <div>Date</div>\n                    <div className=\"text-right\">Amount</div>\n                  </div>\n                  {payrolls.slice(0, 5).map((payroll) => {\n                    const employee = employees.find(e => e.id === payroll.employeeId);\n                    return (\n                      <div key={payroll.id} className=\"grid grid-cols-3 text-sm\">\n                        <div>{employee ? `${employee.firstName} ${employee.lastName}` : 'Unknown'}</div>\n                        <div>{payroll.paymentDate ? formatDate(payroll.paymentDate) : 'Pending'}</div>\n                        <div className=\"text-right font-medium\">{formatCurrency(payroll.netSalary)}</div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>Deductions Summary</CardTitle>\n                <CardDescription>Breakdown of total deductions</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[250px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={[\n                          { name: 'Tax', value: payrolls.reduce((sum, p) => sum + p.totalDeductions * 0.8, 0) },\n                          { name: 'Insurance', value: payrolls.reduce((sum, p) => sum + p.totalDeductions * 0.15, 0) },\n                          { name: 'Other', value: payrolls.reduce((sum, p) => sum + p.totalDeductions * 0.05, 0) }\n                        ]}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {[0, 1, 2].map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => formatCurrency(value as number)} />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        \n        {/* Department Analysis Tab */}\n        <TabsContent value=\"department\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Department-wise Salary Distribution</CardTitle>\n              <CardDescription>Average and total salary by department</CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[400px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={departmentSalaryData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"department\" />\n                    <YAxis />\n                    <Tooltip formatter={(value) => formatCurrency(value as number)} />\n                    <Legend />\n                    <Bar dataKey=\"averageSalary\" name=\"Average Salary\" fill=\"#8884d8\" />\n                    <Bar dataKey=\"totalSalary\" name=\"Total Salary\" fill=\"#82ca9d\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Department Headcount</CardTitle>\n                <CardDescription>Number of employees by department</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={departmentSalaryData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"employeeCount\"\n                        label={({ department, employeeCount, percent }) => \n                          `${department}: ${employeeCount} (${(percent * 100).toFixed(0)}%)`\n                        }\n                      >\n                        {departmentSalaryData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>Department Details</CardTitle>\n                <CardDescription>Salary statistics by department</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-4 text-sm font-medium text-muted-foreground\">\n                    <div>Department</div>\n                    <div>Employees</div>\n                    <div>Avg. Salary</div>\n                    <div className=\"text-right\">Total Salary</div>\n                  </div>\n                  {departmentSalaryData.map((dept, index) => (\n                    <div key={index} className=\"grid grid-cols-4 text-sm\">\n                      <div>{dept.department}</div>\n                      <div>{dept.employeeCount}</div>\n                      <div>{formatCurrency(dept.averageSalary)}</div>\n                      <div className=\"text-right font-medium\">{formatCurrency(dept.totalSalary)}</div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        \n        {/* Leave Utilization Tab */}\n        <TabsContent value=\"leave\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Leave Utilization by Type</CardTitle>\n              <CardDescription>Number of days taken by leave type</CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[400px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={leaveUtilizationData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"type\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"days\" name=\"Days\" fill=\"#8884d8\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Leave Status Distribution</CardTitle>\n                <CardDescription>Distribution of leave requests by status</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={[\n                          { name: 'Approved', value: leaves.filter(l => l.status === 'approved').length },\n                          { name: 'Pending', value: leaves.filter(l => l.status === 'pending').length },\n                          { name: 'Rejected', value: leaves.filter(l => l.status === 'rejected').length },\n                          { name: 'Cancelled', value: leaves.filter(l => l.status === 'cancelled').length }\n                        ]}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, value, percent }) => \n                          `${name}: ${value} (${(percent * 100).toFixed(0)}%)`\n                        }\n                      >\n                        {[0, 1, 2, 3].map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Leave Requests</CardTitle>\n                <CardDescription>Latest leave requests</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-4 text-sm font-medium text-muted-foreground\">\n                    <div>Employee</div>\n                    <div>Type</div>\n                    <div>Duration</div>\n                    <div className=\"text-right\">Status</div>\n                  </div>\n                  {leaves.slice(0, 5).map((leave) => {\n                    const employee = employees.find(e => e.id === leave.employeeId);\n                    return (\n                      <div key={leave.id} className=\"grid grid-cols-4 text-sm\">\n                        <div>{employee ? `${employee.firstName} ${employee.lastName}` : 'Unknown'}</div>\n                        <div>{leave.leaveType.charAt(0).toUpperCase() + leave.leaveType.slice(1)}</div>\n                        <div>{leave.duration} day{leave.duration > 1 ? 's' : ''}</div>\n                        <div className=\"text-right font-medium\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${\n                            leave.status === 'approved' ? 'bg-green-100 text-green-800' :\n                            leave.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                            leave.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {leave.status.charAt(0).toUpperCase() + leave.status.slice(1)}\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        \n        {/* Bonus Distribution Tab */}\n        <TabsContent value=\"bonus\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Bonus Distribution by Type</CardTitle>\n              <CardDescription>Total bonus amount by type</CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[400px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={bonusDistributionData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"type\" />\n                    <YAxis />\n                    <Tooltip formatter={(value) => formatCurrency(value as number)} />\n                    <Legend />\n                    <Bar dataKey=\"amount\" name=\"Amount\" fill=\"#8884d8\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Bonus Status Distribution</CardTitle>\n                <CardDescription>Distribution of bonuses by status</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={[\n                          { name: 'Paid', value: bonuses.filter(b => b.status === 'paid').length },\n                          { name: 'Pending', value: bonuses.filter(b => b.status === 'pending').length },\n                          { name: 'Approved', value: bonuses.filter(b => b.status === 'approved').length },\n                          { name: 'Rejected', value: bonuses.filter(b => b.status === 'rejected').length }\n                        ]}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, value, percent }) => \n                          `${name}: ${value} (${(percent * 100).toFixed(0)}%)`\n                        }\n                      >\n                        {[0, 1, 2, 3].map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Bonuses</CardTitle>\n                <CardDescription>Latest bonus payments</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-4 text-sm font-medium text-muted-foreground\">\n                    <div>Employee</div>\n                    <div>Type</div>\n                    <div>Amount</div>\n                    <div className=\"text-right\">Status</div>\n                  </div>\n                  {bonuses.slice(0, 5).map((bonus) => {\n                    const employee = employees.find(e => e.id === bonus.employeeId);\n                    return (\n                      <div key={bonus.id} className=\"grid grid-cols-4 text-sm\">\n                        <div>{employee ? `${employee.firstName} ${employee.lastName}` : 'Unknown'}</div>\n                        <div>{bonus.bonusType.charAt(0).toUpperCase() + bonus.bonusType.slice(1)}</div>\n                        <div>{formatCurrency(bonus.amount)}</div>\n                        <div className=\"text-right font-medium\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${\n                            bonus.status === 'paid' ? 'bg-blue-100 text-blue-800' :\n                            bonus.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                            bonus.status === 'approved' ? 'bg-green-100 text-green-800' :\n                            'bg-red-100 text-red-800'\n                          }`}>\n                            {bonus.status.charAt(0).toUpperCase() + bonus.status.slice(1)}\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Attendance Analytics Tab */}\n        <TabsContent value=\"attendance\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Present Today</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendances.filter(a => \n                    a.date === new Date().toISOString().split('T')[0] && \n                    (a.status === 'present' || a.status === 'late' || a.status === 'work-from-home')\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Out of {employees.length} employees\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Absent Today</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendances.filter(a => \n                    a.date === new Date().toISOString().split('T')[0] && \n                    a.status === 'absent'\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Out of {employees.length} employees\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Average Work Hours</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {(attendances\n                    .filter(a => a.workHours !== null)\n                    .reduce((sum, a) => sum + (a.workHours || 0), 0) / \n                    attendances.filter(a => a.workHours !== null).length\n                  ).toFixed(2)} hrs\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Based on all attendance records\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Attendance Rate</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {Math.round((attendances.filter(a => \n                    a.status === 'present' || a.status === 'late' || a.status === 'work-from-home' || a.status === 'half-day'\n                  ).length / attendances.length) * 100)}%\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Overall attendance rate\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle>Attendance Status Distribution</CardTitle>\n              <CardDescription>Distribution of attendance records by status</CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n              <div className=\"h-[400px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={attendanceStatusData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      left: 20,\n                      bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"status\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"count\" name=\"Count\" fill=\"#8884d8\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Department Attendance Rate</CardTitle>\n                <CardDescription>Attendance rate by department</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[300px]\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                      data={departmentAttendanceData}\n                      margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                      }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"department\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Bar dataKey=\"attendanceRate\" name=\"Attendance Rate (%)\" fill=\"#82ca9d\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle>Department Attendance Details</CardTitle>\n                <CardDescription>Detailed attendance by department</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-6 text-sm font-medium text-muted-foreground\">\n                    <div>Department</div>\n                    <div>Total</div>\n                    <div>Present</div>\n                    <div>Absent</div>\n                    <div>Late</div>\n                    <div>WFH</div>\n                  </div>\n                  {departmentAttendanceData.map((dept, index) => (\n                    <div key={index} className=\"grid grid-cols-6 text-sm\">\n                      <div>{dept.department}</div>\n                      <div>{dept.total}</div>\n                      <div>{dept.present}</div>\n                      <div>{dept.absent}</div>\n                      <div>{dept.late}</div>\n                      <div>{dept.wfh}</div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}