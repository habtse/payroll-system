{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\ninterface TableProps extends React.HTMLAttributes<HTMLTableElement> {}\n\nconst Table = React.forwardRef<HTMLTableElement, TableProps>(\n  ({ className, ...props }, ref) => (\n    <div className=\"relative w-full overflow-auto\">\n      <table\n        ref={ref}\n        className=\"w-full caption-bottom text-sm\"\n        {...props}\n      />\n    </div>\n  )\n)\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className=\"[&_tr]:border-b\" {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className=\"[&_tr:last-child]:border-0\"\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className=\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\"\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\"\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\"\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className=\"p-4 align-middle [&:has([role=checkbox])]:pr-0\"\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className=\"mt-4 text-sm text-muted-foreground\"\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAFA;;;AAMA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAU;YACT,GAAG,KAAK;;;;;;;;;;;AAKjB,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAU;QAAmB,GAAG,KAAK;;;;;;AAExD,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/danger/Downloads/financehub_updated/src/app/dashboard/attendance/page.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { attendances, employees } from \"@/lib/dummy-data\"\nimport { Attendance } from \"@/types\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon, Clock, Edit, Eye, Plus, Search, Trash2 } from \"lucide-react\"\n\nexport default function AttendancePage() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\")\n  const [attendanceList, setAttendanceList] = React.useState<Attendance[]>([])\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [selectedDate, setSelectedDate] = React.useState<Date>(new Date())\n  const [isAddDialogOpen, setIsAddDialogOpen] = React.useState(false)\n  const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false)\n  const [isViewDialogOpen, setIsViewDialogOpen] = React.useState(false)\n  const [selectedAttendance, setSelectedAttendance] = React.useState<Attendance | null>(null)\n  const [selectedEmployee, setSelectedEmployee] = React.useState<string>(\"\")\n  const [checkInTime, setCheckInTime] = React.useState<string>(\"\")\n  const [checkOutTime, setCheckOutTime] = React.useState<string>(\"\")\n  const [attendanceStatus, setAttendanceStatus] = React.useState<string>(\"present\")\n  const [notes, setNotes] = React.useState<string>(\"\")\n\n  // Fetch attendance data on component mount\n  React.useEffect(() => {\n    const fetchAttendance = async () => {\n      try {\n        // In a real app, this would be an API call\n        // const response = await fetch('/api/attendance');\n        // const data = await response.json();\n        \n        // Using dummy data instead\n        setTimeout(() => {\n          setAttendanceList(attendances);\n          setIsLoading(false);\n        }, 500);\n      } catch (error) {\n        console.error('Error fetching attendance data:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchAttendance();\n  }, []);\n\n  // Filter attendance based on search term and selected date\n  const filteredAttendance = React.useMemo(() => {\n    const formattedDate = format(selectedDate, 'yyyy-MM-dd');\n    \n    return attendanceList.filter(attendance => {\n      const employee = employees.find(emp => emp.id === attendance.employeeId);\n      const employeeName = employee ? `${employee.firstName} ${employee.lastName}` : '';\n      \n      const matchesSearch = \n        employeeName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        attendance.status.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesDate = attendance.date === formattedDate;\n      \n      return matchesSearch && matchesDate;\n    });\n  }, [attendanceList, searchTerm, selectedDate]);\n\n  // Get employee name by ID\n  const getEmployeeName = (employeeId: string) => {\n    const employee = employees.find(emp => emp.id === employeeId);\n    return employee ? `${employee.firstName} ${employee.lastName}` : 'Unknown Employee';\n  };\n\n  // Format time for display\n  const formatTime = (time: string | null) => {\n    if (!time) return 'N/A';\n    return time;\n  };\n\n  // Calculate work hours\n  const calculateWorkHours = (checkIn: string, checkOut: string) => {\n    if (!checkIn || !checkOut) return 0;\n    \n    const [checkInHours, checkInMinutes] = checkIn.split(':').map(Number);\n    const [checkOutHours, checkOutMinutes] = checkOut.split(':').map(Number);\n    \n    const checkInMinutesTotal = checkInHours * 60 + checkInMinutes;\n    const checkOutMinutesTotal = checkOutHours * 60 + checkOutMinutes;\n    \n    const diffMinutes = checkOutMinutesTotal - checkInMinutesTotal;\n    return Math.round((diffMinutes / 60) * 100) / 100;\n  };\n\n  // Handle add attendance\n  const handleAddAttendance = () => {\n    const formattedDate = format(selectedDate, 'yyyy-MM-dd');\n    const workHours = checkInTime && checkOutTime \n      ? calculateWorkHours(checkInTime, checkOutTime)\n      : null;\n    \n    const newAttendance: Attendance = {\n      id: `a${attendanceList.length + 1}`,\n      employeeId: selectedEmployee,\n      date: formattedDate,\n      checkInTime: checkInTime || null,\n      checkOutTime: checkOutTime || null,\n      status: attendanceStatus as 'present' | 'absent' | 'late' | 'half-day' | 'work-from-home',\n      workHours,\n      notes: notes || null,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    setAttendanceList(prev => [...prev, newAttendance]);\n    resetForm();\n    setIsAddDialogOpen(false);\n  };\n\n  // Handle edit attendance\n  const handleEditAttendance = () => {\n    if (!selectedAttendance) return;\n    \n    const workHours = checkInTime && checkOutTime \n      ? calculateWorkHours(checkInTime, checkOutTime)\n      : null;\n    \n    const updatedAttendance: Attendance = {\n      ...selectedAttendance,\n      employeeId: selectedEmployee,\n      checkInTime: checkInTime || null,\n      checkOutTime: checkOutTime || null,\n      status: attendanceStatus as 'present' | 'absent' | 'late' | 'half-day' | 'work-from-home',\n      workHours,\n      notes: notes || null,\n      updatedAt: new Date().toISOString()\n    };\n    \n    setAttendanceList(prev => \n      prev.map(attendance => \n        attendance.id === selectedAttendance.id ? updatedAttendance : attendance\n      )\n    );\n    \n    resetForm();\n    setIsEditDialogOpen(false);\n  };\n\n  // Handle delete attendance\n  const handleDeleteAttendance = (id: string) => {\n    setAttendanceList(prev => prev.filter(attendance => attendance.id !== id));\n  };\n\n  // Reset form\n  const resetForm = () => {\n    setSelectedEmployee(\"\");\n    setCheckInTime(\"\");\n    setCheckOutTime(\"\");\n    setAttendanceStatus(\"present\");\n    setNotes(\"\");\n    setSelectedAttendance(null);\n  };\n\n  // Open edit dialog\n  const openEditDialog = (attendance: Attendance) => {\n    setSelectedAttendance(attendance);\n    setSelectedEmployee(attendance.employeeId);\n    setCheckInTime(attendance.checkInTime || \"\");\n    setCheckOutTime(attendance.checkOutTime || \"\");\n    setAttendanceStatus(attendance.status);\n    setNotes(attendance.notes || \"\");\n    setIsEditDialogOpen(true);\n  };\n\n  // Open view dialog\n  const openViewDialog = (attendance: Attendance) => {\n    setSelectedAttendance(attendance);\n    setIsViewDialogOpen(true);\n  };\n\n  // Get status badge color\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'present':\n        return <Badge className=\"bg-green-500\">Present</Badge>;\n      case 'absent':\n        return <Badge className=\"bg-red-500\">Absent</Badge>;\n      case 'late':\n        return <Badge className=\"bg-yellow-500\">Late</Badge>;\n      case 'half-day':\n        return <Badge className=\"bg-blue-500\">Half Day</Badge>;\n      case 'work-from-home':\n        return <Badge className=\"bg-purple-500\">WFH</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\">Attendance Management</h1>\n        <Button onClick={() => setIsAddDialogOpen(true)}>\n          <Plus className=\"mr-2 h-4 w-4\" /> Add Attendance\n        </Button>\n      </div>\n\n      <Tabs defaultValue=\"daily\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"daily\">Daily Attendance</TabsTrigger>\n          <TabsTrigger value=\"employee\">Employee Attendance</TabsTrigger>\n          <TabsTrigger value=\"summary\">Attendance Summary</TabsTrigger>\n        </TabsList>\n        \n        {/* Daily Attendance Tab */}\n        <TabsContent value=\"daily\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Daily Attendance Record</CardTitle>\n              <CardDescription>\n                View and manage attendance records for a specific date\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4\">\n                <div className=\"w-full md:w-1/3\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search employees...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col md:flex-row gap-4\">\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button variant=\"outline\" className=\"w-full md:w-auto justify-start text-left font-normal\">\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {format(selectedDate, \"PPP\")}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={selectedDate}\n                        onSelect={(date) => date && setSelectedDate(date)}\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                </div>\n              </div>\n\n              {isLoading ? (\n                <div className=\"flex justify-center items-center h-64\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n                </div>\n              ) : (\n                <div className=\"rounded-md border\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Employee</TableHead>\n                        <TableHead>Check In</TableHead>\n                        <TableHead>Check Out</TableHead>\n                        <TableHead>Work Hours</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Notes</TableHead>\n                        <TableHead className=\"text-right\">Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {filteredAttendance.length === 0 ? (\n                        <TableRow>\n                          <TableCell colSpan={7} className=\"text-center py-10\">\n                            No attendance records found for {format(selectedDate, \"PPP\")}\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        filteredAttendance.map((attendance) => (\n                          <TableRow key={attendance.id}>\n                            <TableCell>{getEmployeeName(attendance.employeeId)}</TableCell>\n                            <TableCell>{formatTime(attendance.checkInTime)}</TableCell>\n                            <TableCell>{formatTime(attendance.checkOutTime)}</TableCell>\n                            <TableCell>{attendance.workHours !== null ? `${attendance.workHours} hrs` : 'N/A'}</TableCell>\n                            <TableCell>{getStatusBadge(attendance.status)}</TableCell>\n                            <TableCell>{attendance.notes || '-'}</TableCell>\n                            <TableCell className=\"text-right\">\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => openViewDialog(attendance)}\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </Button>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => openEditDialog(attendance)}\n                              >\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                onClick={() => handleDeleteAttendance(attendance.id)}\n                              >\n                                <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Employee Attendance Tab */}\n        <TabsContent value=\"employee\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Employee Attendance History</CardTitle>\n              <CardDescription>\n                View attendance history for specific employees\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex justify-between items-center mb-6\">\n                <div className=\"w-full md:w-1/3\">\n                  <Select onValueChange={(value) => setSelectedEmployee(value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select an employee\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {employees.map((employee) => (\n                        <SelectItem key={employee.id} value={employee.id}>\n                          {employee.firstName} {employee.lastName}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {selectedEmployee ? (\n                <div className=\"rounded-md border\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Check In</TableHead>\n                        <TableHead>Check Out</TableHead>\n                        <TableHead>Work Hours</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Notes</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {attendanceList\n                        .filter(a => a.employeeId === selectedEmployee)\n                        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n                        .map((attendance) => (\n                          <TableRow key={attendance.id}>\n                            <TableCell>{format(new Date(attendance.date), \"PPP\")}</TableCell>\n                            <TableCell>{formatTime(attendance.checkInTime)}</TableCell>\n                            <TableCell>{formatTime(attendance.checkOutTime)}</TableCell>\n                            <TableCell>{attendance.workHours !== null ? `${attendance.workHours} hrs` : 'N/A'}</TableCell>\n                            <TableCell>{getStatusBadge(attendance.status)}</TableCell>\n                            <TableCell>{attendance.notes || '-'}</TableCell>\n                          </TableRow>\n                        ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              ) : (\n                <div className=\"flex justify-center items-center h-64 text-muted-foreground\">\n                  Please select an employee to view attendance history\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Attendance Summary Tab */}\n        <TabsContent value=\"summary\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Present Today</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendanceList.filter(a => \n                    a.date === format(new Date(), 'yyyy-MM-dd') && \n                    (a.status === 'present' || a.status === 'late' || a.status === 'work-from-home')\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Out of {employees.length} employees\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Absent Today</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendanceList.filter(a => \n                    a.date === format(new Date(), 'yyyy-MM-dd') && \n                    a.status === 'absent'\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Out of {employees.length} employees\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Late Arrivals</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendanceList.filter(a => \n                    a.date === format(new Date(), 'yyyy-MM-dd') && \n                    a.status === 'late'\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Today's late arrivals\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Working From Home</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {attendanceList.filter(a => \n                    a.date === format(new Date(), 'yyyy-MM-dd') && \n                    a.status === 'work-from-home'\n                  ).length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Remote workers today\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle>Attendance Overview</CardTitle>\n              <CardDescription>\n                Summary of attendance records by department\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"rounded-md border\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Department</TableHead>\n                      <TableHead>Total Employees</TableHead>\n                      <TableHead>Present</TableHead>\n                      <TableHead>Absent</TableHead>\n                      <TableHead>Late</TableHead>\n                      <TableHead>WFH</TableHead>\n                      <TableHead>Attendance Rate</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {/* Group by department and calculate stats */}\n                    {Object.entries(\n                      employees.reduce((acc, employee) => {\n                        if (!acc[employee.department]) {\n                          acc[employee.department] = {\n                            total: 0,\n                            present: 0,\n                            absent: 0,\n                            late: 0,\n                            wfh: 0\n                          };\n                        }\n                        \n                        acc[employee.department].total += 1;\n                        \n                        const todayAttendance = attendanceList.find(a => \n                          a.employeeId === employee.id && \n                          a.date === format(new Date(), 'yyyy-MM-dd')\n                        );\n                        \n                        if (todayAttendance) {\n                          if (todayAttendance.status === 'present') {\n                            acc[employee.department].present += 1;\n                          } else if (todayAttendance.status === 'absent') {\n                            acc[employee.department].absent += 1;\n                          } else if (todayAttendance.status === 'late') {\n                            acc[employee.department].late += 1;\n                          } else if (todayAttendance.status === 'work-from-home') {\n                            acc[employee.department].wfh += 1;\n                          }\n                        }\n                        \n                        return acc;\n                      }, {} as Record<string, { total: number, present: number, absent: number, late: number, wfh: number }>)\n                    ).map(([department, data]) => (\n                      <TableRow key={department}>\n                        <TableCell>{department}</TableCell>\n                        <TableCell>{data.total}</TableCell>\n                        <TableCell>{data.present}</TableCell>\n                        <TableCell>{data.absent}</TableCell>\n                        <TableCell>{data.late}</TableCell>\n                        <TableCell>{data.wfh}</TableCell>\n                        <TableCell>\n                          {Math.round(((data.present + data.late + data.wfh) / data.total) * 100)}%\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Add Attendance Dialog */}\n      <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Add Attendance Record</DialogTitle>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"employee\">Employee</Label>\n              <Select value={selectedEmployee} onValueChange={setSelectedEmployee}>\n                <SelectTrigger id=\"employee\">\n                  <SelectValue placeholder=\"Select an employee\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {employees.map((employee) => (\n                    <SelectItem key={employee.id} value={employee.id}>\n                      {employee.firstName} {employee.lastName}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"date\">Date</Label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    id=\"date\"\n                    variant=\"outline\"\n                    className=\"w-full justify-start text-left font-normal\"\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {format(selectedDate, \"PPP\")}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={selectedDate}\n                    onSelect={(date) => date && setSelectedDate(date)}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"checkIn\">Check In Time</Label>\n                <div className=\"flex items-center\">\n                  <Clock className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    id=\"checkIn\"\n                    type=\"time\"\n                    value={checkInTime}\n                    onChange={(e) => setCheckInTime(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"checkOut\">Check Out Time</Label>\n                <div className=\"flex items-center\">\n                  <Clock className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    id=\"checkOut\"\n                    type=\"time\"\n                    value={checkOutTime}\n                    onChange={(e) => setCheckOutTime(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"status\">Status</Label>\n              <Select value={attendanceStatus} onValueChange={setAttendanceStatus}>\n                <SelectTrigger id=\"status\">\n                  <SelectValue placeholder=\"Select status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"present\">Present</SelectItem>\n                  <SelectItem value=\"absent\">Absent</SelectItem>\n                  <SelectItem value=\"late\">Late</SelectItem>\n                  <SelectItem value=\"half-day\">Half Day</SelectItem>\n                  <SelectItem value=\"work-from-home\">Work From Home</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"notes\">Notes (Optional)</Label>\n              <Textarea\n                id=\"notes\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add any notes about this attendance record\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsAddDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleAddAttendance} disabled={!selectedEmployee}>\n              Add Record\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit Attendance Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Edit Attendance Record</DialogTitle>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"edit-employee\">Employee</Label>\n              <Select value={selectedEmployee} onValueChange={setSelectedEmployee}>\n                <SelectTrigger id=\"edit-employee\">\n                  <SelectValue placeholder=\"Select an employee\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {employees.map((employee) => (\n                    <SelectItem key={employee.id} value={employee.id}>\n                      {employee.firstName} {employee.lastName}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-checkIn\">Check In Time</Label>\n                <div className=\"flex items-center\">\n                  <Clock className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    id=\"edit-checkIn\"\n                    type=\"time\"\n                    value={checkInTime}\n                    onChange={(e) => setCheckInTime(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"edit-checkOut\">Check Out Time</Label>\n                <div className=\"flex items-center\">\n                  <Clock className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    id=\"edit-checkOut\"\n                    type=\"time\"\n                    value={checkOutTime}\n                    onChange={(e) => setCheckOutTime(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"edit-status\">Status</Label>\n              <Select value={attendanceStatus} onValueChange={setAttendanceStatus}>\n                <SelectTrigger id=\"edit-status\">\n                  <SelectValue placeholder=\"Select status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"present\">Present</SelectItem>\n                  <SelectItem value=\"absent\">Absent</SelectItem>\n                  <SelectItem value=\"late\">Late</SelectItem>\n                  <SelectItem value=\"half-day\">Half Day</SelectItem>\n                  <SelectItem value=\"work-from-home\">Work From Home</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"edit-notes\">Notes (Optional)</Label>\n              <Textarea\n                id=\"edit-notes\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add any notes about this attendance record\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleEditAttendance}>\n              Update Record\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* View Attendance Dialog */}\n      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>Attendance Details</DialogTitle>\n          </DialogHeader>\n          {selectedAttendance && (\n            <div className=\"py-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Employee</h3>\n                  <p>{getEmployeeName(selectedAttendance.employeeId)}</p>\n                </div>\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Date</h3>\n                  <p>{format(new Date(selectedAttendance.date), \"PPP\")}</p>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Check In Time</h3>\n                  <p>{formatTime(selectedAttendance.checkInTime)}</p>\n                </div>\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Check Out Time</h3>\n                  <p>{formatTime(selectedAttendance.checkOutTime)}</p>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Work Hours</h3>\n                  <p>{selectedAttendance.workHours !== null ? `${selectedAttendance.workHours} hours` : 'N/A'}</p>\n                </div>\n                <div>\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Status</h3>\n                  <div className=\"mt-1\">{getStatusBadge(selectedAttendance.status)}</div>\n                </div>\n              </div>\n              \n              {selectedAttendance.notes && (\n                <div className=\"mt-4\">\n                  <h3 className=\"font-medium text-sm text-muted-foreground\">Notes</h3>\n                  <p>{selectedAttendance.notes}</p>\n                </div>\n              )}\n              \n              <div className=\"grid grid-cols-2 gap-4 mt-4 text-sm text-muted-foreground\">\n                <div>\n                  <p>Created: {format(new Date(selectedAttendance.createdAt), \"PPP p\")}</p>\n                </div>\n                <div>\n                  <p>Updated: {format(new Date(selectedAttendance.updatedAt), \"PPP p\")}</p>\n                </div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button onClick={() => setIsViewDialogOpen(false)}>\n              Close\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}